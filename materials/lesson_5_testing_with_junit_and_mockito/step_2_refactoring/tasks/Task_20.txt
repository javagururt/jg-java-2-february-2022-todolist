Продолжим реализацию задуманных нами улучшений.

Создайте класс OrderingValidator и вынесете в него
валидацию объекта Ordering.

Какую сигнатуру должен иметь метод validate(...):

- public List<CoreError> validate(SearchBooksRequest request)  ?
- public List<CoreError> validate(Ordering ordering)  ?

Помните о нашем аргументе в пользу улучшения кода:
- при этом изменении нам удастся выделить проверку объектов
  Ordering и Paging в отдельные классы, тем самым открыв возможность
  повторного использования этой функциональности в других частях
  системы (например если у нас будет в системе реализован поиск
  по другим доменным объектам с применением Ordering и Paging
  нам не нужно будет писать их валидацию снова, мы просто воспользуемся
  классами OrderingValidator и PagingValidator).

Если мы хотим сделать проверку объекта Ordering универсальным,
чтобы ее можно было вызывать из разных мест - это значит нам
надо выбрать второй вариант сигнатуры метода:

- public List<CoreError> validate(Ordering ordering) !

Так как если мы выберем первый validate(SearchBooksRequest request)
то мы автоматически привязываем сябя к объекту SearchBooksRequest
который используется только при поиске книг. А это значит, что в
других местах приложения мы не сможем вызывать нашу проверку объекта
Ordering. Наше решение потеряет свойство универсальности.

Поэтому класс OrderingValidator будет выглядеть так:

public class OrderingValidator {

	public List<CoreError> validate(Ordering ordering) {
		// перенесите сюда код валидации объекта Ordering
	}

}

